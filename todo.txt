sign up button in red on top right nav bar -button light blue

add quotes

all lowercase snow ride

-Associate initial and return trip
  -Add a field trip to trip form
  -Create initial trip and if return present create two trips


-How to authicate with a phone Number
-Make two Trips
--show profile

-AUTH
 - sign-up responds to JSON & HTML DONE
 - set the cookie DONE
 - Encrypting passwords DONE
 - CheckAuth must check header: Authentication(Bearer) DONE


Associate trips
  trips#create
    departsOn, origin, destination => save tripA
    if returnsOn is present?
      make a tripB with origin: destination, desitnation: origin with departsOn: returnsOn, initialTrip = tripA, tripA.returnTrip = tripB
    else (one way trip)
      do nothing

  tripA = {
    departsOn: Date,
    returnsOn: Date,
    origin: San Francisco,
    destination: Tahoe,
    returnTrip: tripB._id,
    initialTrip: null

  }

  tripB = {
    departsOn: tripA.returnsOn
    returnsOn: null,
    origin: Tahoe,
    destination: San Francisco,
    returnTrip: null,
    initialTrip: tripA._id
  }

  trips#index
  Trip.find().populate('returnTrip initialTrip');


-Mongoose save as a Unix date so that can be converted to swift-maybe

Take out hours from the date function
departsAt-change
API User backend

Origin & destination in trips-done
Make return optional-Done
Make two trips - and link them


CRUD Users -/sign up(create get is the form post is where you create the user), /login, /profile(users show, to edit you can call settings)
Associate trips
Encrypt passwords

SOMEDAY

Phone
- Needs to remove dashes on backend

make separate return trips.
make it work no matter what timezone they are in...

Add Users -first, last, email, phone, password -DONE
add date picker to trips-form- DONE
Fix mongoose error -DONE
Style trips-show.hbs - render dates in english- DONE
rename project: snowride-server- DONE
fix navbar -DONE

Respond to HTMl
- trips#new DONE
- trips#edit DONE
- trips#create DONE
- #index DONE
- #show DONE
- #update DONE
- #delete DONE

respond to JSON (use postman! :D)
- #index DONE
- #show DONE
- trips#create DONE
- #update- DONE
- #delete-DONE

Error handling
- INDEX - DONE
- SHOW -DONE
- create DONE
- update - DONE
- delete - DONE

respond to JSON (use postman! :D)
- #index DONE
- #show DONE
- trips#create DONE
- #update- DONE
- #delete-DONE

-Put on Heroku without user resource DONE


- Decrementing the date by one day when editing trips DONE


Trips#index
  order trips on departsOn DONE
  remove trips older than today DONE


ERD - departsInThe for the actual time DONE

Flask server - CRUD one resource - trips DONE






LOGIN
GET '/sessions/new'
POST '/sessions'

SIGN-UP
GET '/users/new'
POST '/users'

---------

LOGIN

GET '/login'
POST '/login'

REGISTERING
GET '/registration'
POST '/registration'

---------

LOGIN
GET '/login'
POST '/login'

SIGN-UP
GET '/sign-up' => RETURNS HTML FORM
POST '/sign-up' => SAVES FORM DATA AND RETURNS TOKEN


Resource - photos, Photo, photo
Model - Photo, photo.js
Controler - photos.js
Collection - photos
